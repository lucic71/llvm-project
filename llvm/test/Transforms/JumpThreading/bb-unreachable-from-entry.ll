; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S < %s -passes=jump-threading | FileCheck --check-prefixes=CHECK %s
; RUN: opt -S < %s -passes=jump-threading -disable-undef-jump-threading | FileCheck --check-prefixes=CHECK-DISABLE %s

define void @foo() {
; CHECK-LABEL: @foo(
; CHECK-NEXT:  exit2:
; CHECK-NEXT:    ret void
;
; CHECK-DISABLE-LABEL: @foo(
; CHECK-DISABLE-NEXT: entry:
; CHECK-DISABLE-NEXT:   br label [[BB1:%.*]]
; CHECK-DISABLE:      entry2:
; CHECK-DISABLE-NEXT:   br label [[BB1]]
; CHECK-DISABLE: bb1:
; CHECK-DISABLE-NEXT:   [[A0:%.*]] = phi i32 [ undef, %entry2 ], [ 0, %entry ]
; CHECK-DISABLE-NEXT:   [[B:%.*]] = icmp ne i32 [[A0]], 0
; CHECK-DISABLE-NEXT:   br i1 [[B]], label %exit1, label %exit2
; CHECK-DISABLE:      exit1:
; CHECK-DISABLE-NEXT:   [[A1:%.*]] = phi i32 [ [[A0]], %bb1 ]
; CHECK-DISABLE-NEXT:   ret void
; CHECK-DISABLE:      exit2:
; CHECK-DISABLE-NEXT:   ret void

entry:
  br label %bb1

entry2:
  br label %bb1

bb1:
  %a0 = phi i32 [ undef, %entry2 ], [ 0, %entry ]
  %b = icmp ne i32 %a0, 0
  br i1 %b, label %bb2, label %exit2

bb2:
  br label %exit1

exit1:
  %a1 = phi i32 [ %a0, %bb2 ]
  ret void

exit2:
  ret void
}
